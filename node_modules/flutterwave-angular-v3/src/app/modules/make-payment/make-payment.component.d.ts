import { EventEmitter, OnInit } from '@angular/core';
import { InlinePaymentOptions, PaymentSuccessResponse } from '../models';
import { Flutterwave } from '../flutterwave.service';
import * as ɵngcc0 from '@angular/core';
export declare class MakePaymentComponent implements OnInit {
    private flutterwave;
    public_key: string;
    tx_ref: string;
    amount: number;
    currency: string;
    payment_options: string;
    payment_plan: string | number;
    subaccounts: any;
    integrity_hash: any;
    redirect_url: string;
    meta: object;
    customer: object;
    callback: EventEmitter<PaymentSuccessResponse>;
    close: EventEmitter<any>;
    customizations: object;
    text: string;
    style: any;
    className: string;
    data: InlinePaymentOptions;
    private inlinePaymentOptions;
    customer_defaults: {
        email: string;
        phone_number: string;
        name: string;
    };
    meta_defaults: {
        consumer_id: string;
        consumer_mac: string;
    };
    customizations_defaults: {
        title: string;
        description: string;
        logo: string;
    };
    constructor(flutterwave: Flutterwave);
    ngOnInit(): void;
    makePayment(): void;
    prepareForPayment(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MakePaymentComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MakePaymentComponent, "flutterwave-make-payment", never, {
    "customer": "customer";
    "meta": "meta";
    "customizations": "customizations";
    "public_key": "public_key";
    "tx_ref": "tx_ref";
    "amount": "amount";
    "currency": "currency";
    "payment_options": "payment_options";
    "payment_plan": "payment_plan";
    "subaccounts": "subaccounts";
    "integrity_hash": "integrity_hash";
    "redirect_url": "redirect_url";
    "text": "text";
    "style": "style";
    "className": "className";
    "data": "data";
}, {
    "callback": "callback";
    "close": "close";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFrZS1wYXltZW50LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJtYWtlLXBheW1lbnQuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJbmxpbmVQYXltZW50T3B0aW9ucywgUGF5bWVudFN1Y2Nlc3NSZXNwb25zZSB9IGZyb20gJy4uL21vZGVscyc7XG5pbXBvcnQgeyBGbHV0dGVyd2F2ZSB9IGZyb20gJy4uL2ZsdXR0ZXJ3YXZlLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTWFrZVBheW1lbnRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIHByaXZhdGUgZmx1dHRlcndhdmU7XG4gICAgcHVibGljX2tleTogc3RyaW5nO1xuICAgIHR4X3JlZjogc3RyaW5nO1xuICAgIGFtb3VudDogbnVtYmVyO1xuICAgIGN1cnJlbmN5OiBzdHJpbmc7XG4gICAgcGF5bWVudF9vcHRpb25zOiBzdHJpbmc7XG4gICAgcGF5bWVudF9wbGFuOiBzdHJpbmcgfCBudW1iZXI7XG4gICAgc3ViYWNjb3VudHM6IGFueTtcbiAgICBpbnRlZ3JpdHlfaGFzaDogYW55O1xuICAgIHJlZGlyZWN0X3VybDogc3RyaW5nO1xuICAgIG1ldGE6IG9iamVjdDtcbiAgICBjdXN0b21lcjogb2JqZWN0O1xuICAgIGNhbGxiYWNrOiBFdmVudEVtaXR0ZXI8UGF5bWVudFN1Y2Nlc3NSZXNwb25zZT47XG4gICAgY2xvc2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGN1c3RvbWl6YXRpb25zOiBvYmplY3Q7XG4gICAgdGV4dDogc3RyaW5nO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgY2xhc3NOYW1lOiBzdHJpbmc7XG4gICAgZGF0YTogSW5saW5lUGF5bWVudE9wdGlvbnM7XG4gICAgcHJpdmF0ZSBpbmxpbmVQYXltZW50T3B0aW9ucztcbiAgICBjdXN0b21lcl9kZWZhdWx0czoge1xuICAgICAgICBlbWFpbDogc3RyaW5nO1xuICAgICAgICBwaG9uZV9udW1iZXI6IHN0cmluZztcbiAgICAgICAgbmFtZTogc3RyaW5nO1xuICAgIH07XG4gICAgbWV0YV9kZWZhdWx0czoge1xuICAgICAgICBjb25zdW1lcl9pZDogc3RyaW5nO1xuICAgICAgICBjb25zdW1lcl9tYWM6IHN0cmluZztcbiAgICB9O1xuICAgIGN1c3RvbWl6YXRpb25zX2RlZmF1bHRzOiB7XG4gICAgICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgICAgIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gICAgICAgIGxvZ286IHN0cmluZztcbiAgICB9O1xuICAgIGNvbnN0cnVjdG9yKGZsdXR0ZXJ3YXZlOiBGbHV0dGVyd2F2ZSk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBtYWtlUGF5bWVudCgpOiB2b2lkO1xuICAgIHByZXBhcmVGb3JQYXltZW50KCk6IHZvaWQ7XG59XG4iXX0=